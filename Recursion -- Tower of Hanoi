Quetions________________________________________

There are 3 Towers, Tower 1 has n disks, where n is a positive number, towe 2 and 3 is empty
the disk are incresingly placed in terms of size such that the smallest disk in on top and largest dist in bottom
You are required to...
    print instruction to move that disks
    from 1 tower to 2 tower using 3 tower
    folowing are rulses
        At time only one disk can move
        You can only move disk from top
        never place smallest disk on larger disk

write question using recursion
Input n 3, tower 1 = 10, tower 2 = 20, tower 3 = 30
output 
1[10 --> 20]
2[10 --> 30]
1[20 --> 30]
3[10 --> 20]
1[30 --> 10]
2[30 --> 20]
1[10 --> 20]


Solution____________________________________________

class Main {
    public static void toh(int n, int td1, int td2, int td3){
        if(n == 0){
            return;
        }
        
        toh(n-1, td1, td3, td2);
        System.out.println(n + "[" + td1 + " --> " + td2 + "]");
        toh(n-1, td3, td2, td1);
        
    }
    
    public static void main(String[] args) {
        System.out.println("Try programiz.pro");
        int n = 3;
        int td1 = 10;
        int td2 = 20;
        int td3 = 30;
        
        toh(n, td1, td2, td3);
    }
}
