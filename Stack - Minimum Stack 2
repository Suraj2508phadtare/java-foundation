Question______________________________________________________________________

You are required to the complete the code of our MinStack
As data member you are one stack minimum element is availabled in the class
here is list of task need to complete

push --> accept data in LIFO manner
Pop --> Should remove data in LIFO manner,
top --> return top calue
size --> should return number of element available in the stack
min --> should return smallest element available in the stack

input 4, 8, 2, 10, 16
outpot 2

Solution_______________________________________________________________________

import java.util.*;
class Main {
    public static void main(String[] args) {
        System.out.println("Try programiz.pro");
        
        MinimumStack mt = new MinimumStack(5,0);
        mt.push(4);
        mt.push(8);
        mt.push(2);
        mt.push(10);
        mt.push(16);
        
        mt.display();
        mt.min();
        
        mt.pop();
        mt.pop();
        mt.pop();
        
        mt.display();
        mt.min();
    }
    
    static class MinimumStack{
        
        int[] arr;
        int size;
        int min = 0;
        
        MinimumStack(int length, int s){
            this.arr = new int[length];
            this.size = s;
        }
        
        // push
        void push(int val){
            if(size == 0){
               arr[size] = val + (val - min);
               min = val;
            }else{
               if(val < min){
                   arr[size] = val + (val - min);
                    min = val;
               }else{
                   arr[size] = val;
               }
            }
            size++; 
        }
        
        
        //pop
        void pop() {
            if(size == 0){
                System.out.println("Stack UnderFlow");
            }else{
                if(arr[size-1] < min){
                    min = 2 * min  - arr[size-1];
                }
                size--;
            }
        }
        
        // peek
        void peek(){
            System.out.println(arr[size-1]);
        }
        
        
        //size
        
        void size(){
            System.out.println(size);
        }
        
        //min
        
        void min(){
            if(size == 0){
                  System.out.println("Stack UnderFlow");
            }else{
                 System.out.println(min);
            }
           
        }
        
        // display
        
        void display(){
            for(int i=size-1; i>=0; i--){
                System.out.print(arr[i]+ " ");
            }
            System.out.println();
        }
    }
}
