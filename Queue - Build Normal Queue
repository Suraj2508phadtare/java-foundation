Question____________________________________________________
Quild Normal Queue

Solution___________________________________________________

// Online Java Compiler
// Use this editor to write, compile and run your Java code online

class Main {
    public static void main(String[] args) {
        System.out.println("Try programiz.pro");
        
        SampleQueue que = new SampleQueue(5);
        que.add(10);
        que.add(20);
        que.add(30);
        que.add(40);
        que.add(50);
        
        que.remove();
        que.remove();
        
        que.size();
        que.display();
        
        que.add(60);
        que.size();
        que.display();
    }
    
    public static class SampleQueue{
        int[] arr;
        int f;
        int sizeVar;
        
        SampleQueue(int l){
            this.arr = new int[l];
            f=0;
            sizeVar=0;
        }
        
        // size()
        void size() {
           System.out.println(sizeVar);
        }
        
        // peek
        void peek(){
            System.out.println(arr[f]);
        }
        
        // push
        void add(int val){
            if(arr.length == sizeVar){
                System.out.println("Queue is overflow");
            }else{
               int rear = (f + sizeVar) % arr.length;
               arr[rear] = val;
               sizeVar++;
                 
            }
        }
        
        // remove
        void remove(){
            if(sizeVar == 0){
                System.out.println("Queue is UnderFlow");
            }else{
                System.out.println(arr[f]);
                sizeVar--;
                f = (f + 1) % arr.length;
            }
        }
        
        // display
        void display(){
            if(sizeVar == 0){
                System.out.println("Queue is underflow");
            }else{
                int s = f;
                for(int i=0; i<sizeVar; i++) {
                    s = s % arr.length;
                    System.out.print(arr[s] + " ");
                    s++;
                }
                System.out.println();
            }
        }
        
    }
}
