Question

You are given number n the size of chess board,
You are required to place n number of queens in then n * n cells of board such that no queen can kill another
Note -- Queen kill at distance in all 8 directions
complete the body of printQueens function, without changing the signature

input ---- 
 4
output ----
 0-1 1-3 2-0 3-2
 0-2 1-0 2-3 3-1

Solution________________________________________

// Online Java Compiler
// Use this editor to write, compile and run your Java code online

class Main {
    
    public static void nQueens(int[][] arr, String asf, int row){
        
        if(row>=arr.length){
            System.out.println(asf);
            return;
        }
        
        for(int i=0; i<arr.length; i++){
            if(isItSafeSpaceForQueen(arr, row, i) == true){
            arr[row][i] = 1;
            nQueens(arr, asf +" "+ row + "-"+ i, row+1);
            arr[row][i] = 0;
            }
        }
    }
    
    public static boolean isItSafeSpaceForQueen(int[][] arr, int row, int col){
        // vertical
        for(int i= row-1, j=col; i>=0; i--){
            if(arr[i][j] == 1){
                return false;
                
            }
        }
        //diagonal left
        for(int i=row-1, j=col-1; i>=0 && j>=0; i--, j--){
            if(arr[i][j] == 1){
                return false;
            }
        }
        
        //diagonal right
        for(int i=row-1, j=col+1; i>=0&& j<arr.length; i--, j++){
            if(arr[i][j] == 1){
                return false;
            }
        }
        return true;
    } 
    
    public static void main(String[] args) {
        System.out.println("Try programiz.pro");
        
        int n = 4;
        int[][] arr = new int[n][n];
        nQueens(arr, "", 0);
    }
}

